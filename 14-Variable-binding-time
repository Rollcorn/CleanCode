Одним из аспектов инициализации, серьезно влияющим на удобство сопровождения 
и изменения программы, является время связывания — момент, когда переменная и 
ее значение связываются вместе. Связываются ли они при написании кода? При его 
компиляции? При загрузке? При выполнении программы? В другое время?


1)  Пример максимально раннего связывания, во время написания кода:
    
    https://github.com/Rollcorn/ServerClientApp/blob/main/src/C_Client.cpp
    
    Переменные commRes и discRes являются переменными времени работы метода
    и сохраняют результаты выполнения метода взаимодействия клиента-сервера 
    (communication()) и освобождения ресурсов занятых сокетом (flush()). 
    Эти переменные имеют раннее связывание со значением false на случай 
    неожиданного поведения. То есть по умолчанию communication() и flush()
    имеют статус не успешного выполнения.

    bool commRes = false;
    bool discRes = false;


2)  Через определение константы:
    
    https://github.com/Rollcorn/ServerClientApp/blob/main/src/C_Client.cpp
    
    По условиям задания клиент отправляет на сервер запрос "Give me a number!"
    так как сообщение не изменяется то я завел её как константу, а далее в 
    метод send() клиента всегда отпарвляется константа

    const std::string strMessage = "Give me a number!"; // Запрос клиента


3)  Связывание во время выполнения программы:

    https://github.com/Rollcorn/ServerClientApp/blob/main/src/C_Client.cpp

    Для управления временем выполнения программы, задержек в методах отправки
    и посылки сообщений использую переменную времени, которая вычисляется во 
    время выполния и возвращается специализированным методом.
    
    auto start  = std::chrono::steady_clock::now();




